/*
** RELEASE STATEMENT(s):
** 							UNLIMITED RIGHTS
** The Government has the right to use, modify, reproduce, release, perform,
** display, or disclose this application programmable interface in whole or in
** part, in any manner and for any purpose whatsoever, and to have or
** authorize others to do so.
**
** Statement A - Approved for public release; distribution is unlimited (29 July 2014).
*/

/*
** JTNC STANDARD SPECIFICATION:
** Packet API, Version: 2.0.2, 02 April 2008
** Flow Control Extension
**
** API CATEGORY:
** JTNC Primitive API
*/

/*
** PacketFlowControl.idl - Packet Flow Control Interfaces
*/

#ifndef __PACKETFLOWCONTROL_DEFINED
#define __PACKETFLOWCONTROL_DEFINED

#ifndef __PACKET_DEFINED
#include <redhawk/PACKET/Packet.idl>
#endif

module Packet
{
	// Packet Flow Control -- Consumer provides
	interface FlowControl
	{
		boolean spaceAvailable();
		// Signaling Controls (see: FlowSignals)
		oneway void enableFlowResumeSignals( in boolean setEnableState );
	};
	
	// Packet Flow Signal -- Producer provides
	interface FlowSignals
	{
		oneway void signalResume();
	};
	
	// Packet 'Consumers' types
	interface FlowOctetStream : PayloadStatus
	{
		boolean pushPacket(
			in StreamControlType control,
			in JTRS::OctetSequence payload
			) raises( UnableToComplete );
	};
	
	interface FlowUshortStream : PayloadStatus
	{
		boolean pushPacket(
			in StreamControlType control,
			in JTRS::UshortSequence payload
			) raises( UnableToComplete );
	};
};

#endif // __PACKETFLOWCONTROL_DEFINED
